// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  username       String
  profilePicture String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

enum ModelTrainingStatus {
  Pending
  Generated
  Failed
}

model Model {
  id             String              @id @default(uuid())
  name           String
  type           ModelTypeEnum
  age            Int
  ethinicity     EthinicityEnum
  eyeColor       String
  bald           Boolean
  userId         String
  triggerWord    String?
  tensorPath     String?
  trainingStatus ModelTrainingStatus @default(Pending)
  trainingImages TraningImages[]
  outputImages   OutputImages[]
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
}

model TraningImages {
  id       String @id @default(uuid())
  imageUrl String
  modelId  String
  model    Model  @relation(fields: [modelId], references: [id])
}

model OutputImages {
  id        String     @id @default(uuid())
  imageUrl  String
  modelId   String
  userId    String
  prompt    String
  status    StatusEnum @default(Pending)
  model     Model      @relation(fields: [modelId], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Packs {
  id      String        @id @default(uuid())
  name    String
  prompts PackPrompts[]
}

model PackPrompts {
  id     String @id @default(uuid())
  prompt String
  packId String
  pack   Packs  @relation(fields: [packId], references: [id])
}

enum StatusEnum {
  Pending
  Generated
  Failes
}

enum ModelTypeEnum {
  Man
  Woman
  Others
}

enum EthinicityEnum {
  White
  Black
  Asian_American
  East_Asian
  South_East_Asian
  South_Asian
  Middle_Eastern
  Pacific
  Hispanic
}

enum EyeColorEnum {
  Brown
  Blue
  Hazel
  Gray
}
